name: Test MacOS
on:
  workflow_call:
    inputs:
      distro-slug:
        type: string
        required: true
        description: The Distribution Slug

      display-name:
        type: string
        required: true
        description: The Display Name For The Job

      runs-on:
        type: string
        required: true
        description: The GitHub MacOS Worker To Run Workflow On

      instances:
        type: string
        required: true
        description: The Instances To Test

      timeout:
        type: number
        required: false
        default: 20
        description: The timeout(in minutes) for the workflow

## DGM env:
## DGM   KITCHEN_LOCAL_YAML: 'kitchen.macos.yml'

jobs:
  Test:
    name: ${{ matrix.instance }}
    ## DGM runs-on: ${{ inputs.runs-on }}
    runs-on: macos-12
    timeout-minutes: ${{ inputs.timeout }}
    strategy:
      fail-fast: false
      matrix:
        instance: ${{ fromJSON(inputs.instances) }}

    steps:
      - uses: actions/checkout@v4

      ## DGM - name: Setup Ruby
      ## DGM   uses: ruby/setup-ruby@v1
      ## DGM   with:
      ## DGM     ruby-version: 2.6.10
      ## DGM     ## ruby-version: 3.3.4
      ## DGM     bundler-cache: true

      ## DGM - name: Set up Python 3.10
      ## DGM   uses: actions/setup-python@v5
      ## DGM   with:
      ## DGM     python-version: "3.10"

      ## DGM - name: Install Python Dependencies
      ## DGM   run: |
      ## DGM     pip install -U pip
      ## DGM     pip install -r tests/requirements.txt

      ## DGM - name: Create Test Instance
      ## DGM   run: |
      ## DGM     bundle exec kitchen create ${{ matrix.instance }}-${{ inputs.distro-slug }} || \
      ## DGM       (sleep 10 && bundle exec kitchen create ${{ matrix.instance }}-${{ inputs.distro-slug }})
      ## DGM     sleep 2

      ## DGM - name: Test Bootstrap
      ## DGM   run: |
      ## DGM     bundle exec kitchen verify ${{ matrix.instance }}-${{ inputs.distro-slug }}
      ## DGM     sleep 2

      ## DGM - name: Destroy Test Instance
      ## DGM   if: always()
      ## DGM   run: |
      ## DGM     bundle exec kitchen destroy ${{ matrix.instance }}-${{ inputs.distro-slug }}
      ## DGM     sleep 2

      - name: Install Pytest
        run: |
          pip install -U pytest

      - name: Bootstrap Salt
        run: |
          . ./bootstrap-salt.sh

      - name: Test Bootstrap
        run: |
          pytest --cache-clear -v -s -ra --log-cli-level=debug tests/integration/

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-${{ matrix.instance }}-${{ inputs.distro-slug }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: exitstatus-${{ github.job }}-${{ matrix.instance }}-${{ inputs.distro-slug }}
          path: exitstatus/
