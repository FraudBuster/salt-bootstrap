name: Test Windows
on:
  workflow_call:
    inputs:
      distro-slug:
        type: string
        required: true
        description: The Distribution Slug

      display-name:
        type: string
        required: true
        description: The Display Name For The Job

      runs-on:
        type: string
        required: true
        description: The GitHub Windows Worker To Run Workflow On

      instances:
        type: string
        required: true
        description: The Instances To Test

      timeout:
        type: number
        required: false
        default: 20
        description: The timeout(in minutes) for the workflow

## DGM env:
## DGM   machine_user: kitchen
## DGM   machine_pass: Password1
## DGM   machine_port: 5985
## DGM   KITCHEN_LOCAL_YAML: 'kitchen.windows.yml'
## DGM
## DGM Wonder what the KITCHEN_LOCAL_YAML had to be set here for Windows, do we need to do something similar for runners ?

jobs:
  Test:
    name: ${{ matrix.instance }}
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout }}
    strategy:
      fail-fast: false
      matrix:
        instance: ${{ fromJSON(inputs.instances) }}

    steps:
      - uses: actions/checkout@v3

      ## DGM Need to replace this
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.3
          bundler-cache: true

      - name: Install Chef
        uses: actionshub/chef-install@1.1.0
        with:
          project: chef
          version: 16.10.8

      - name: Add Chef bindir to PATH
        uses: myci-actions/export-env-var-powershell@1
        with:
          name: PATH
          value: "C:\\opscode\\chef\\bin;C:\\opscode\\chef\\embedded\\bin;$env:PATH"

      - name: Setup test user
        run: |
          $password = ConvertTo-SecureString $env:machine_pass -AsPlainText -Force
          New-LocalUser $env:machine_user -Password $password
          Add-LocalGroupMember -Group "Administrators" -Member $env:machine_user
          Get-LocalUser
          Get-LocalGroupMember -Group "Administrators"

      - name: Set up WinRM
        run: |
          Set-WSManQuickConfig -Force
          winrm set winrm/config/service '@{AllowUnencrypted="True"}'
          env

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python Dependencies
        run: |
          pip install -U pip
          pip install -r tests/requirements.txt

      - name: Create Test Instance
        run: |
          ## DGM bundle exec kitchen create ${{ matrix.instance }}-${{ inputs.distro-slug }}
          ## DGM
          ## DGM Need to select a GitHub runner here , ubuntu-latest
          sleep 2

      - name: Test Bootstrap
        run: |
          ## DGM env
          ## DGM bundle exec kitchen verify ${{ matrix.instance }}-${{ inputs.distro-slug }}
          ## DGM
          ## DGM Need to run the bootstrap tests for Windows here
          sleep 2

      - name: Destroy Test Instance
        if: always()
        run: |
          ## DGM bundle exec kitchen destroy ${{ matrix.instance }}-${{ inputs.distro-slug }}
          ## DGM
          ## DGM this can be removed since using GitHub shared runners, and it should just close when done with it
          sleep 2

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-${{ matrix.instance }}-${{ inputs.distro-slug }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: exitstatus
          path: exitstatus
